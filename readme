FINAL PROJECT : MMA ACADEMY

(1) Dependencies required;

Coding enviorment; Visual Studio Code (recomemnded).
Drag the whole Folder into VS code.

Using 'npm install' in Visual Studio code install the following;

node.js
react.js
Bootstrap
dotenv

To install, Open Terminal, then New Terminal then install dependencies;

(Installation example: 'npm istall node.js')


In Visual Studio Code , left side, Click Extentions  search and install Live Server. 

This will host the project using your computer.

(2) To Run the project, Got to File then Open Folder, then select the folder to open. 

The folder should have all the modules used inside it like the homepage.html style.css script.js ect.

Once open  Click Explorer, then >FINAL PROJECTV5, then >MMA Academy,Right-click on homepage.html and Open with Live Server.

This will open the project in your browser under the Url http://localhost:3000 or  different port like; 127.0.0.1.


(3) For Cloning the Repository.

On GitHub, navigate to the main page of the repository.

Above the list of files, click  Code.

Screenshot of the list of files on the landing page of a repository. The "Code" button is highlighted with a dark orange outline.
Copy the URL for the repository.

To clone the repository using HTTPS, under "HTTPS", click .

To clone the repository using an SSH key, including a certificate issued by your organization's SSH certificate authority, click SSH, then click .

To clone a repository using GitHub CLI, click GitHub CLI, then click .

Screenshot of the "Code" dropdown menu. To the right of the HTTPS URL for the repository, a copy icon is outlined in dark orange.
Open Git Bash.

Change the current working directory to the location where you want the cloned directory.

Type git clone, and then paste the URL you copied earlier.

git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY
Press Enter to create your local clone.

$ git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY
> Cloning into `Spoon-Knife`...
> remote: Counting objects: 10, done.
> remote: Compressing objects: 100% (8/8), done.
> remove: Total 10 (delta 1), reused 10 (delta 1)
> Unpacking objects: 100% (10/10), done.


